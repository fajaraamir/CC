using System;
using System.Text.RegularExpressions;

class Program
{
    static void Main()
    {
        // Step 1: Ask user for code input
        Console.WriteLine("Enter your mini-language code (e.g., var a1 = 12@; float b2 = 3.14$$;):");
        string inputCode = Console.ReadLine();

        // Step 2: Regex to extract token type, var name, and value
        string pattern = @"(var|float|int)\s+([abc]\d+)\s*=\s*([^\s;]+)";
        MatchCollection matches = Regex.Matches(inputCode, pattern);

        // Step 3: Table headers
        Console.WriteLine("\n{0,-10} | {1,-15} | {2}", "VarName", "SpecialSymbol", "Token Type");
        Console.WriteLine(new string('-', 45));

        // Step 4: Loop through each match
        foreach (Match match in matches)
        {
            string tokenType = match.Groups[1].Value;   // var, float, int
            string varName = match.Groups[2].Value;     // a1, b2, c3, etc.
            string value = match.Groups[3].Value;       // assigned value

            // Find special characters in value
            MatchCollection specialChars = Regex.Matches(value, @"[^a-zA-Z0-9\.]");
            if (specialChars.Count > 0)
            {
                foreach (Match sp in specialChars)
                {
                    Console.WriteLine("{0,-10} | {1,-15} | {2}", varName, sp.Value, tokenType);
                }
            }
        }
    }
}
